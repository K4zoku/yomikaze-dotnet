@page
@model Web.Pages.SignUp

@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('signUpForm', () => ({
            username: '',
            password: '',
            confirmPassword: '',
            email: '',
            birthday: '',

            loading: false,

            usernameError: '',
            passwordError: '',
            confirmPasswordError: '',
            emailError: '',
            birthdayError: '',

            errorMessage: '',

            init() {
                this.auth = Alpine.store('auth');
                this.client = this.auth.http;
            },

            resetErrorMessages() {
                this.usernameError = '';
                this.passwordError = '';
                this.confirmPasswordError = '';
                this.emailError = '';
                this.birthdayError = '';
                this.errorMessage = '';

            },

            handleError(error) {
                if (!error.response) return;
                // Reset the error messages
                this.resetErrorMessages();

                let response = error.response;
                console.log(response);
                let data = response.data;
                switch (response.status) {
                    case 409:
                        this.usernameError = data.message;
                        this.emailError = data.message;
                        break;
                    case 400:
                        this.usernameError = getFirstError(data, 'Username');
                        this.passwordError = getFirstError(data, 'Password');
                        this.confirmPasswordError = getFirstError(data, 'ConfirmPassword');
                        this.emailError = getFirstError(data, 'Email');
                        this.birthdayError = getFirstError(data, 'Birthday');
                        break;
                    default:
                        this.errorMessage = data.message || '';
                        break;
                }
                this.loading = false;
            },

            handleSuccess(response) {
                let responseObject = response.data;
                let token = responseObject.data.token;
                if (!token) {
                    this.errorMessage = 'An error occurred while signing up. Please try again.';
                    this.loading = false;
                    return;
                }

                this.auth.login(token); // Set the token
                window.location.href = '/'; // Redirect to the home page
            },

            submit() {
                this.loading = true;
                let data = {
                    username: this.username,
                    password: this.password,
                    confirmPassword: this.confirmPassword,
                    email: this.email,
                    birthday: this.birthday

                };

                this.client.post('/API/Authenticate/SignUp', data)
                    .then(response => this.handleSuccess(response))
                    .catch(error => this.handleError(error));
            }
        }));
    });
</script>

<div class="flex items-center justify-center w-full min-h-[calc(100vh-8rem)]"
     x-init="if ($store.auth.authenticated) window.location.href = '/'"
     x-data="signUpForm">
    <form class="w-full h-fit max-w-md bg-base-300 p-8 shadow-lg rounded-lg"
          x-on:submit.prevent="submit()">
        <h2 class="flex text-2xl font-bold items-center justify-center mb-3">Sign Up</h2>

        <div class="mb-4">
            <label for="username" class="block text-sm font-bold mb-2">Username</label>
            <input id="username" type="text" x-model="username" placeholder="Enter your username" required
                   class="input input-bordered w-full" autocomplete="username" :class="{ 'input-error': !!usernameError }"/>
            <span class="text-xs text-red-500" x-show="!!usernameError" x-text="usernameError"></span>
        </div>
        
        <div class="mb-4">
            <label for="email" class="block text-sm font-bold mb-2">Email</label>
            <input id="email" type="email" x-model="email" placeholder="Enter your email" required
                   class="input input-bordered w-full" autocomplete="email" :class="{ 'input-error': !!emailError }"/>
            <span class="text-xs text-red-500" x-show="!!emailError" x-text="emailError"></span>
        </div>

        <div class="mb-4">
            <label for="password" class="block text-sm font-bold mb-2">Password</label>
            <input id="password" type="password" x-model="password" placeholder="Enter your password" required
                   class="input input-bordered w-full" autocomplete="new-password" :class="{ 'input-error': !!passwordError }"/>
            <span class="text-xs text-red-500" x-show="!!passwordError" x-text="passwordError"></span>
        </div>

        <div class="mb-4">
            <label for="confirmPassword" class="block text-sm font-bold mb-2">Confirm Password</label>
            <input id="confirmPassword" type="password" x-model="confirmPassword" placeholder="Enter your confirmPassword" required
                   class="input input-bordered w-full" autocomplete="new-password" :class="{ 'input-error': !!confirmPasswordError }"/>
            <span class="text-xs text-red-500" x-show="!!confirmPasswordError" x-text="confirmPasswordError"></span>
        </div>
        
        <div class="mb-4">
            <label for="birthday" class="block text-sm font-bold mb-2">Date of Birth</label>
            <input id="birthday" type="date" x-model="birthday" placeholder="Enter your date of birth" required
                   class="input input-bordered w-full" autocomplete="birthday" :class="{ 'input-error': !!birthdayError }"/>
            <span class="text-xs text-red-500" x-show="!!birthdayError" x-text="birthdayError"></span>
        </div>

        <template x-if="!!errorMessage">
            <div role="alert" class="alert alert-error mb-4 shadow-lg">
                <i aria-hidden="true" data-feather="alert-circle"></i>
                <span x-text="errorMessage"></span>
            </div>
        </template>
        <div class="mb-6">
            <button :disabled="loading" class="btn btn-success w-full"
                    type="submit">
                <span class="loading loading-infinity" x-show="loading"></span>
                <span x-text="loading ? 'Signing Up...' : 'Sign Up'">Sign Up</span>
            </button>
        </div>
        <p class="text-center text-gray-500 text-xs">
            Already have an account? <a asp-page="SignIn" class="underline">Sign In</a>.
        </p>
    </form>
</div>