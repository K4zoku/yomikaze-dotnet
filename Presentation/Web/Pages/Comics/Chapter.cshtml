@page "/Comics/{comicId}/Chapters/{index}"
@model ChapterModel


<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('chapter', () => ({
            index: @Model.Index,
            comicId: '@Model.ComicId',

            auth: null,
            client: null,

            chapter: {},
            chapters: [],

            init() {
                this.auth = Alpine.store('auth');
                this.client = this.auth.http;

                this.fetchChapter();
                this.$watch('index', () => this.fetchChapter());
                this.fetchChapters();                
            },


            async fetchChapter() {
                this.chapter = await this.client.get(`/API/Comics/${this.comicId}/Chapters/${this.index}`)
                    .then(response => response.data)
                    .catch(error => {
                        if (error.response.status === 404) {
                            window.location.href = '/404';
                        }
                        console.error('Error while fetching pages', error);
                        return null;
                    });
            },

             async fetchChapters() {
                 this.chapters = await this.client.get(`/API/Comics/${this.comicId}/Chapters`)
                    .then(response => response.data)
                    .catch(error => {
                        console.error('Error while fetching comic details', error);
                        return [];
                    });            
                
            },
            
            get isFirst() {
                if (this.chapters.length > 0) {
                    return this.index === this.chapters[0].index;
                }
                return true;
            },
            
            get isLast() {
                if (this.chapters.length > 0) {
                    return this.index === this.chapters[this.chapters.length - 1].index;
                }
                return true;
            },

            prevChapter() {
                if (this.isFirst) return;
                for (let i = 0; i < this.chapters.length; i++) {
                    if (this.chapters[i].index === this.index) {
                        this.goToChapter(this.chapters[i - 1].index);
                        return;
                    }
                }
            },

            nextChapter() {
                if (this.isLast) return;
                for (let i = 0; i < this.chapters.length; i++) {
                    if (this.chapters[i].index === this.index) {
                        this.goToChapter(this.chapters[i + 1].index);
                        return;
                    }
                }
            },

            goToChapter(index) {
                let url = `/Comics/${this.comicId}/Chapters/${index}`;
                this.index = index;
                window.history.pushState(null, '', url);
                window.scrollTo({ top: 0, behavior: 'smooth' });
            },
        }));
    });

</script>

<div x-data="chapter">
    <div class="max-w-screen w-full min-h-[calc(100vh-8rem)] bg-base-100">
        <div class="w-10/12 mx-auto py-10">
            <!--preload-->
            <link as="image" rel="preload" href="~/loading.svg" type="image/svg+xml">
            
            <div class="mb-12 pb-8 flex flex-col items-center">
                <template x-for="page in chapter.pages" :key="page.id">
                    <div class="w-full max-w-screen" x-data="{ loaded: false }">
                        <img src="" :alt="page.id" alt="" x-on:load="setTimeout(() => loaded = true, 300)" x-show="loaded" 
                             x-transition:enter="transition ease-out duration-500" 
                             x-transition:enter-start="opacity-0 transform scale-95" 
                             x-transition:enter-end="opacity-100 transform scale-100" 
                             class="object-contain object-center mx-auto" :src="page.image">
                        <img alt="Loader" class="object-contain object-center mx-auto my-12" src="~/loading.svg" x-show="!loaded"/>
                    </div>
                </template>

            </div>

            <div class="bottom-2 sticky btm-nav btm-nav-sm rounded-box shadow-2xl bg-base-300 border border-dashed border-neutral">
                <div class="px-2 flex flex-row gap-4"
                     x-on:keyup.arrow-left.window="prevChapter()"
                     x-on:keyup.arrow-right.window="nextChapter()"
                     >
                    <button type="button" class="btn btn-sm btn-circle btn-neutral hover:btn-accent focus:btn-accent active:btn-accent" 
                            x-on:click="prevChapter()" :disabled="isFirst">
                        <i data-feather="chevron-left"></i>
                    </button>
                    <label>
                        <select x-model="index" class="select select-sm select-accent grow sm:w-full sm:max-w-sm">
                            <template x-for="(chapter, i) in Object.values(chapters)">
                                <option :value="chapter.index" x-text="chapter.title || 'Chapter ' + (chapter.index || i)"></option>
                            </template>
                        </select>
                    </label>
                    <button type="button" class="btn btn-sm btn-circle btn-neutral hover:btn-accent focus:btn-accent active:btn-accent" 
                            x-on:click="nextChapter()" :disabled="isLast">
                        <i data-feather="chevron-right"></i>
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>